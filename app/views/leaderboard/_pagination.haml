%nav
  %ul.pagination
    - pagination = Observatory::Pagination.paginate(page_range, current_page, leading: Observatory::Config::Leaderboard::PAGINATION_LEADING, surrounding: Observatory::Config::Leaderboard::PAGINATION_SURROUNDING, trailing: Observatory::Config::Leaderboard::PAGINATION_TRAILING)
    - pagination.each do |item|
      - if item[:type] == :prev
        - if item[:attributes].include? :disabled
          %li.disabled
            %a{ href: '#' }
              %span &laquo;
        - else
          %li
            %a{ href: url(:leaderboard, :players, sort_by: params['sort_by'], last_active_after: params['last_active_after'], page: item[:page]) }
              %span &laquo;

      - elsif item[:type] == :next
        - if item[:attributes].include? :disabled
          %li.disabled
            %a{ href: '#' }
              %span &raquo;
        - else
          %li
            %a{ href: url(:leaderboard, :players, sort_by: params['sort_by'], last_active_after: params['last_active_after'], page: item[:page]) }
              %span &raquo;


      - elsif item[:type] == :page
        %li{class: item[:attributes].include?(:active) ? 'active' : nil}
          = leaderboard_pagination_link(item[:page])

      - elsif item[:type] == :separator
        %li.disabled
          %span ...

