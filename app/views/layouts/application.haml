!!!

%html{ lang: 'en' }
  %head
    %meta{ charset: 'utf-8' }
    %meta{ 'http-equiv' => 'X-UA-Compatible', content: 'IE=edge' }
    %meta{ name: 'viewport', content: 'width=device-width, initial-scale=1' }

    %title Observatory

    = stylesheet_link_tag 'bootstrap.min'
    = stylesheet_link_tag 'select2.min'
    = stylesheet_link_tag 'select2-bootstrap.min'
    = stylesheet_link_tag 'application'

    = javascript_include_tag 'jquery-3.1.0.min.js'
    = javascript_include_tag 'bootstrap.min.js'
    = javascript_include_tag 'chartkick.min.js'
    = javascript_include_tag 'chart.bundle.min.js'
    = javascript_include_tag 'select2.min.js'
    = javascript_include_tag 'application.js'

    - if Observatory::Config::Piwik::ENABLED
      :javascript
        var _paq = _paq || [];
        /* tracker methods like "setCustomDimension" should be called before "trackPageView" */
        _paq.push(['trackPageView']);
        _paq.push(['enableLinkTracking']);
        (function() {
          var u="//#{ Observatory::Config::Piwik::SERVER }/";
          _paq.push(['setTrackerUrl', u+'piwik.php']);
          _paq.push(['setSiteId', '#{ Observatory::Config::Piwik::SITE_ID }']);
          var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
          g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);
        })();


  %body
    %nav.navbar.navbar-default.navbar-static-top
      .container
        .navbar-header
          %button.navbar-toggle.collapsed{ type: 'button', 'data-toggle': 'collapse', 'data-target': '#navbar' }
            %span.icon-bar
            %span.icon-bar
            %span.icon-bar
          %a.navbar-brand{ href: '/' }
            Observatory

        #navbar.collapse.navbar-collapse
          %ul.nav.navbar-nav
            %li.dropdown
              %a.dropdown-toggle{ href: '#', 'data-toggle': 'dropdown', role: 'button' }
                Players
                %span.caret
              %ul.dropdown-menu
                %li
                  = link_to 'Search', url(:players, :index)
                  = link_to 'Add new', url(:player_query, :new)

            %li
              = link_to 'Badges', url(:badges, :index)

            %li
              = link_to 'Leaderboard', url(:leaderboard, :players)

            %li
              = link_to 'Stats', url(:observatory, :stats)

            %li
              = link_to 'FAQ', url(:observatory, :faq)

            %li.dropdown
              %a.dropdown-toggle{ href: '#', 'data-toggle': 'dropdown', role: 'button' }
                Admin
                %span.caret
              %ul.dropdown-menu
                - if logged_in?
                  %li
                    = link_to 'API Keys', url(:api_keys, :index)
                  %li
                    = link_to 'Caching', url(:caching, :index)
                  %li
                    = link_to 'Update frequencies', url(:update_frequencies, :index)
                  %li
                    = link_to 'Users', url(:users, :index)

                - else
                  %li
                    = link_to 'Login', url(:users, :login)

          - if current_user
            %p.navbar-text.navbar-right
              = "Welcome #{ current_user.user }"
              = link_to "(logout)", url(:users, :logout)
          %p.navbar-text.navbar-right
            = link_to "Version: #{ Observatory::VERSION }", 'https://github.com/Dragaera/observatory/blob/master/CHANGELOG.md'

    .container
      .flash
        - if Observatory::Config::MOTD::ENABLED
          .alert.alert-info{role: :alert}= Observatory::Config::MOTD::MESSAGE

      .flash
        - if flash[:error]
          .alert.alert-danger{role: :alert}= flash[:error]

        - if flash[:notice]
          .alert.alert-warning{role: :alert}= flash[:notice]

        - if flash[:info]
          .alert.alert-info{role: :alert}= flash[:info]

        - if flash[:success]
          .alert.alert-success{role: :alert}= flash[:success]

      - if @banner && !@banner.empty?
        .flash
          .alert.alert-info.alert-dismissible{role: :alert}
            %button.close{type: 'button', 'data-dismiss': 'alert'}
              %span
                &times;
            = @banner

      = yield(:content)
